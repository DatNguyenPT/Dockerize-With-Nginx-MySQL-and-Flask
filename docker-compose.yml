version: "3.9"

services:
  flask1:
    container_name: flask1
    image: dockerhub-flask_live_app:1.0.0
    ports:
      - "5001:5000"
    environment:
      - DB_URL=postgresql://postgres:postgres@postgres_db:5432/postgres
      - serverID=1
    depends_on:
      - postgres_db

  flask2:
    container_name: flask2
    image: dockerhub-flask_live_app:1.0.0
    ports:
      - "5002:5000"
    environment:
      - DB_URL=postgresql://postgres:postgres@postgres_db:5432/postgres
      - serverID=2
    depends_on:
      - postgres_db

  flask3:
    container_name: flask3
    image: dockerhub-flask_live_app:1.0.0
    ports:
      - "5003:5000"
    environment:
      - DB_URL=postgresql://postgres:postgres@postgres_db:5432/postgres
      - serverID=3
    depends_on:
      - postgres_db

  flask4:
    container_name: flask4
    image: dockerhub-flask_live_app:1.0.0
    ports:
      - "5004:5000"
    environment:
      - DB_URL=postgresql://postgres:postgres@postgres_db:5432/postgres
      - serverID=4
    depends_on:
      - postgres_db

  flask5:
    container_name: flask5
    image: dockerhub-flask_live_app:1.0.0
    ports:
      - "5005:5000"
    environment:
      - DB_URL=postgresql://postgres:postgres@postgres_db:5432/postgres
      - serverID=5
    depends_on:
      - postgres_db

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - flask1
      - flask2
      - flask3
      - flask4
      - flask5

  postgres_db:
    container_name: postgres_db
    image: postgres:12
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
